generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String           @id @default(uuid())
  email              String           @unique
  name               String?
  password           String?
  image              String
  accessToken        String?
  provider           String           @default("email")
  emailVerified      Boolean          @default(false)
  Forums             Forum[]
  Comment            Comment[]
  createdAt          DateTime         @default(now())
  CommentReplies     CommentReplies[]
  UserForums         UserForum[]
  currentRole        String?          @default("Human")
  country            String?          @default("Anonymous")
  languages          String[]         @default(["English"])
  interestedSubjects String[]
  isActive           Boolean?         @default(true)
  isOpenToRequest    Boolean?         @default(false)
  
}

model Forum {
  id          String      @id @default(uuid())
  title       String
  description String?     @db.VarChar(100000)
  userId      String
  User        User        @relation(fields: [userId], references: [id])
  tags        String[]
  Comments    Comment[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isActive    Boolean     @default(true)
  UserForums  UserForum[]
  upvotes     Int         @default(0)
  downvotes   Int         @default(0)
}

model UserForum {
  id           String   @id @default(cuid())
  isUpvoted    Boolean? @default(false)
  isDownvoted  Boolean? @default(false)
  isBookMarked Boolean? @default(false)
  User         User     @relation(fields: [userId], references: [id])
  userId       String
  Forum        Forum    @relation(fields: [forumId], references: [id])
  forumId      String
}

model Comment {
  id             String           @id @default(cuid())
  comment        String
  userId         String
  User           User             @relation(fields: [userId], references: [id])
  forumId        String
  Forum          Forum            @relation(fields: [forumId], references: [id])
  createdAt      DateTime         @default(now())
  likes          Int              @default(0)
  CommentReplies CommentReplies[]
}

model UserComment {
  id      String  @id @default(uuid())
  isLiked Boolean @default(false)
}

model CommentReplies {
  id        String   @id @default(cuid())
  Comment   Comment  @relation(fields: [commentId], references: [id])
  commentId String
  comment   String
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  userId    String
  tagged    String[] @default([])
}
